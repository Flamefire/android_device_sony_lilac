# PWD: frameworks/base

From 59ae2b3bed14fbe4f17f737864059b641c081767 Mon Sep 17 00:00:00 2001
From: Danny Lin <danny@kdrag0n.dev>
Date: Sat, 16 Oct 2021 02:37:06 +0200
Subject: [PATCH] KeyStore: Block key attestation for Google Play Services

In order to enforce SafetyNet security, Google Play Services is now
using hardware attestation for ctsProfile validation in all cases, even
when basic attestation is selected. The SafetyNet API response from GMS
will report that basic attestation was used, but under the hood,
hardware attestation is always used regardless of the reported state.
This results in SafetyNet failing to pass due to TrustZone reporting an
unlocked bootloader (and a partially invalidated root of trust) in the
key attestation result.

We can still take advantage of the fact that this usage of hardware
attestation is opportunistic - that is, it falls back to basic
attestation if key attestation fails to run - and prevent GMS from using
key attestation at the framework level. This causes it to gracefully
fall back to basic attestation and pass SafetyNet with an unlocked
bootloader.

Key attestation is still available for other apps, as there are valid
uses for it that do not involve SafetyNet.

[ghostrider-reborn: updated for android 12 from https://github.com/kdrag0n/safetynet-fix/blob/master/java_module/app/src/main/java/dev/kdrag0n/safetynetriru/proxy/ProxyKeyStoreSpi.kt]
Co-authored-by: Adithya R <gh0strider.2k18.reborn@gmail.com>

Change-Id: Ib6e1ed55a51ff65673075311f2887ea6149f27e4
---
 .../java/android/security/keystore2/AndroidKeyStoreSpi.java | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
index 33411e1ec5b97..92fb2a4671bf6 100644
--- a/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
+++ b/keystore/java/android/security/keystore2/AndroidKeyStoreSpi.java
@@ -164,6 +164,12 @@ private KeyEntryResponse getKeyMetadata(String alias) {
 
     @Override
     public Certificate[] engineGetCertificateChain(String alias) {
+        for (StackTraceElement ste : Thread.currentThread().getStackTrace()) {
+            if (ste.getClassName().contains("DroidGuard")) {
+                throw new UnsupportedOperationException("Blocking safetynet attestation");
+            }
+        }
+
         KeyEntryResponse response = getKeyMetadata(alias);
 
         if (response == null || response.metadata.certificate == null) {
